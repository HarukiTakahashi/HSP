//　================================================
//
//　楕円に内接する長方形で面積が最大のものを求める
//
//	（ラグランジュの未定乗数法）
//	　・制約条件
//		　(x^2 / a^2) + (y^2 / b^2) = 1
//
//	　・最大化する関数
//		　f(x,y) = 4xy
//		（この式は面積を表すので無限大に発散することはない）
//
//　ラグランジュ乗数を導入すると
//		F(x,y,λ) = 4xy - λ((x^2 / a^2) + (y^2 / b^2) - 1)
//
//	この式と，x,y,λそれぞれに対する偏微分の結果が0になることを利用すると
//	以下の式が導出できる
//		x = a / √2
//		y = b / √2
//
//	この通りにboxfを描画してやると，その長方形は楕円に対して内接し，
//	最大の面積を持つことになる．
//
//　================================================


//　================================================
//　プログラム　ここから
screen 0, 500, 400
title "楕円に内接する長方形で面積が最大のものを描画"

pos 20,0
input a,30,18,3
input b,30,18,3


x = 0.0
y = 0.0

//　================================================
//　メインループ
//　ぶん回すので重い
*main
	redraw 0
	init

	doCalc
	drawEllipse
	drawBox
	redraw 1
		
	await 1
goto *main


//　================================================
//　色々書く
#deffunc init
	color 255,255,255:boxf
	color 0
	pos 0,0
	mes "a"
	mes "b"	
	mes "　　↑自由に変えてね"
return

//　================================================
//　計算する
#deffunc doCalc
	x = double(a) / sqrt(2)
	y = double(b) / sqrt(2)
	color 0
	pos 100,0
	mes "x: " + x
	mes "y: " + y	
return

//　================================================
//　長方形書く
#deffunc drawBox
	color 0,255,0
	boxf ginfo_winx/2 - x, ginfo_winy/2 - y,ginfo_winx/2 + x, ginfo_winy/2 + y
return

//　================================================
//　楕円書く
#deffunc drawEllipse
	color 255,0,0
	circle ginfo_winx/2 - a, ginfo_winy/2 - b,ginfo_winx/2 + a, ginfo_winy/2 + b
return